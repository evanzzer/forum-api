name: Continuous Integration

on:
  push:
    branches:
      - master

jobs:
  container-job:
    runs-on: ubuntu-latest
    container: node:14.17.3-alpine3.14

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        node-version: [14.17.3]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
#      - name: Install PostgreSQL client
#        run: |
#          apt-get update
#          apt-get install --yes postgresql-client
#      - name: Install PostgreSQL Database Testing Environment
#        run: psql -h postgres -U postgres -c 'CREATE DATABASE ${{ secrets.PGDATABASE_TEST }};'
#        env:
#          PGPASSWORD: ${{ secrets.PGPASSWORD_TEST }}
      - name: npm install migrate and test
        run: |
          npm install
          npm run migrate up
          npm run test
        env:
          CI: true
          PGHOST_TEST: postgres # ${{ secrets.PGHOST_TEST }}
          PGUSER_TEST: postgres # ${{ secrets.PGUSER_TEST }}
          PGDATABASE_TEST: postgres # ${{ secrets.PGDATABASE_TEST }}
          PGPASSWORD_TEST: postgres # ${{ secrets.PGPASSWORD_TEST }}
          PGPORT_TEST: 5432 # ${{ secrets.PGPORT_TEST }}
          PGHOST: postgres # ${{ secrets.PGHOST_TEST }}
          PGUSER: postgres # ${{ secrets.PGUSER_TEST }}
          PGDATABASE: postgres # ${{ secrets.PGDATABASE_TEST }}
          PGPASSWORD: postgres # ${{ secrets.PGPASSWORD_TEST }}
          PGPORT: 5432 # ${{ secrets.PGPORT_TEST }}
          ACCESS_TOKEN_KEY: ${{ secrets.ACCESS_TOKEN_KEY }}
          REFRESH_TOKEN_KEY: ${{ secrets.REFRESH_TOKEN_KEY }}


